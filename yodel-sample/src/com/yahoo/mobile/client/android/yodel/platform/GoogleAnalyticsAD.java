package com.yahoo.mobile.client.android.yodel.platform;

import android.app.Application;
import android.content.Context;
import android.net.http.HttpResponseCache;
import android.view.View;

import com.flurry.android.FlurryAgent;
import com.flurry.android.ads.FlurryAdNative;
import com.flurry.android.ads.FlurryAdNativeAsset;
import com.google.android.gms.analytics.GoogleAnalytics;
import com.google.android.gms.analytics.HitBuilders;
import com.google.android.gms.analytics.Tracker;
import com.yahoo.mobile.client.android.yodel.R;
import com.yahoo.mobile.client.android.yodel.utils.AnalyticsHelper;
import com.yahoo.mobile.client.share.search.settings.SearchSDKSettings;

import java.io.File;
import java.io.IOException;
import java.util.Map;

/**
 * Start to learn Google Analytics:
 * https://developers.google.com/analytics/devguides/collection/android/v4/start
 *
 * GA Account: hawk_wei@htc.com
 * @See <a href="https://analytics.google.com/analytics/web/"> Manage GoogleAnalytics </a>
 */

public class GoogleAnalyticsAD extends BaseAD {
    private Tracker mTracker;

    @Override
    public void InitAdServer(Context context){
        // TODO:
        /**
         * Gets the default {@link Tracker} for this {@link Application}.
         * @return tracker
         */
        mTracker = getDefaultTracker(context);
    }

    synchronized public Tracker getDefaultTracker(Context context) {
        if (mTracker == null) {
            GoogleAnalytics analytics = GoogleAnalytics.getInstance(context);
            // To enable debug logging use: adb shell setprop log.tag.GAv4 DEBUG
            mTracker = analytics.newTracker(R.xml.global_tracker); // Hawk: R.xml.global_tracker will be generated by google-service.json during compiling.
        }
        return mTracker;
    }

    @Override
    public void logError(String errorId, String errorDescription, Throwable throwable) {
        // TODO:
    }
    @Override
    public void endTimedEvent(String eventName, Map<String, String> eventParams) {
        // TODO:
    }
    @Override
    public void loadAdAssetInView(FlurryAdNative adNative, String assetName, View view) {
        // TODO:
    }

    @Override
    public void logEvent(String eventName, Map<String, String> eventParams, boolean timed) {
        // TODO:
    }

    public void logEvent(String category, String action) {
        mTracker.send(new HitBuilders.EventBuilder()
                .setCategory(category)
                .setAction(action)
                .build());
    }

    public void logScreen(String screenName){
        mTracker.setScreenName("Image~" + screenName);
        mTracker.send(new HitBuilders.ScreenViewBuilder().build());
    }
}
